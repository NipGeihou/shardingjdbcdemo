# 一个实体类对应两张表，覆盖：【解决The bean 'dataSource', defined in class path resource.....问题】
spring.main.allow-bean-definition-overriding=true

# 数据源名称，多数据源以逗号分隔
spring.shardingsphere.datasource.names=m1,m2,m3

# 数据源1
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/sharding_edu_1?useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m1.username=sharding_edu_1
spring.shardingsphere.datasource.m1.password=4xnzy3YYWesrdyJP

# 数据源2
spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/sharding_edu_2?useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m2.username=sharding_edu_2
spring.shardingsphere.datasource.m2.password=4xnzy3YYWesrdyJP

# 数据源3
spring.shardingsphere.datasource.m3.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m3.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m3.url=jdbc:mysql://localhost:3306/sharding_user?useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.m3.username=sharding_user
spring.shardingsphere.datasource.m3.password=5SJNGrb4HWFjWAy8

# 配置user数据库里面t_user转库转表
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=m$->{3}.t_user
spring.shardingsphere.sharding.tables.t_user.key-generator.column=user_id
spring.shardingsphere.sharding.tables.t_user.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.tables.t_user.table-strategy.inline.algorithm-expression=t_user


# 指定数据库分布情况，数据库表分布规则
# spring.shardingsphere.sharding.tables.表名.actual-data-nodes=
spring.shardingsphere.sharding.tables.course.actual-data-nodes=m$->{1..2}.course_$->{1..2}

# ============== 【库策略】 ===============
# 指定数据库分片策略 约定user_id是偶数添加到m1，是奇数添加到m2
#分片列名称
spring.shardingsphere.sharding.tables.course.database-strategy.inline.sharding-column=user_id
#分片算法行表达式，需符合groovy语法
spring.shardingsphere.sharding.tables.course.database-strategy.inline.algorithm-expression=m$->{user_id % 2 + 1}

# ============== 【库策略 end】 ===============

# ============== 【表策略】 ===============
#自增列名称，缺省表示不使用自增主键生成器
spring.shardingsphere.sharding.tables.course.key-generator.column=cid
#自增列值生成器类型，缺省表示使用默认自增列值生成器。可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
spring.shardingsphere.sharding.tables.course.key-generator.type=SNOWFLAKE

# 指定分片策略，约定cid值偶数添加至course_1表，如果是奇数添加到course_2表
# 分片列名称
spring.shardingsphere.sharding.tables.course.table-strategy.inline.sharding-column=cid
# 分片算法行表达式，需符合groovy语法
spring.shardingsphere.sharding.tables.course.table-strategy.inline.algorithm-expression=course_$->{cid % 2 + 1}
# ============== 【表策略 end】 ===============

#是否开启SQL显示，默认值: false
spring.shardingsphere.props.sql.show=true